Perguntas

I. Repare que main chama strcmp. O que significa se strcmp, após receber duas strings como
argumentos, retornar 0? (Dica: RTFM)

II. Como você reescreveria a linha abaixo, extraída de main, usando if e else?
int max = (!strcmp(g.level, "debug")) ? 9 : 1024;

III. Em que circunstâncias o uso de sscanf abaixo, extraído de main, retorna 2 em vez de 1?
sscanf(argv[2], " %d %c", &g.number, &c)

IV. Que atributos de g representam as coordenadas onde cursor do usuário está?

V. Qual função (que nós escrevemos) você pode chamar para levar o cursor para essas
coordenadas? (Dica: nós lhe dissemos alguns parágrafos atrás)

VI. Perto de que linha de main você poderia adicionar elementos case para lidar com outras
teclas além de N, R, e ctrl-L? 

VII. A maioria das placas n00b e l33t têm muitos espaços em branco. Mas quantos espaços em
branco tem debug #1? E debug #2? E debug #9?

Respostas

1: Sim pois ela recebeu os dois argumentos necessarios 
   para serem comparados.

2: int max = 0;
   if(!strcmp(g.level, "debug") {
     max = 9;
   } else {
     max = 1024;
   }

3: quando o argumento não for parecido com o determinado.

4: os inteiros x e y.

5: a função show_cursor.

6: Proximo da linha 164.

7: O numero de espaço em branco é o numero de parametro para o debug.




case KEY_UP:
                for(int i = 0; i <= 3; i++) {
                    for(int j = 0; j <= 25; j++) {
                        if(y == (top + 0 + 4 * 0) +1 && x == (left + j)) {
                            y++;
                        } else if(y == (top + 0 + 4 * i) +1 && x == (left + j)) {
                            y--;
                        }
                    }
                }
                y--;
                move(y, x);
                break;

            case KEY_DOWN:
                for(int i = 0; i <= 3; i++) {
                    for(int j = 0; j <= 25; j++) {
                        if(y == (top + 4 * 3) - 1 && x == (left + j)) {
                            y--;
                        } else if(y == (top + 0 + 4 * i) - 1 && x == (left + j)) {
                            y++;
                        }
                    }
                }
                y++;
                move(y, x);
                break;
            
            case KEY_LEFT:
                for(int i = 0; i <= 3; i++) {
                    for(int j = 0; j <= 12; j++) {
                        if(y == top + j && x == (left + j + 1 * i) - j) {
                            x += 2;
                        }

                        if(y == top + j && x == (left + 4 * 2) + 2) {
                            x -= 2;
                        }

                        if(y == top + j && x == (left + 4 * 3) + 6) {
                            x -= 2;
                        } 
                    }
                }
                x -= 2;
                move(y ,x);
                break;

            case KEY_RIGHT:
                for(int i = 0; i < 6; i++) {
                    for(int j = 0; j <= 12; j++) {
                        if(y == top + j && x == (left + i + 10 * i)) {
                            x -= 2;
                        }

                        if(y == top + j && x == (left + 3 * 2)) {
                            x += 2;
                        }

                        if(y == top + j && x == (left + 4 * 3) + 2) {
                            x += 2;
                        } 
                    }
                }
                x += 2;
                move(y, x);
                break;

